name: Build and test
on: push
jobs:
   gfortran:
      strategy:
         matrix:
            version: [10]  # [7, 8, 9, 10]
            os: [ubuntu-latest]
            #include:
            #   - version: 6
            #     os: ubuntu-18.04
            #   - version: 8
            #     cmake_args: -DFABM_USE_CONTIGUOUS=OFF
         fail-fast: false
      runs-on: ${{ matrix.os }}
      steps:
      - name: Install compiler and MPI
        #run: sudo apt-get install python3-numpy python3-wheel python3-netcdf4 python3-mpi4py python3-matplotlib gfortran-${{ matrix.version }}
        run: |
           sudo apt-get update
           sudo apt-get install gfortran-${{ matrix.version }} libopenmpi-dev
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install cython numpy netcdf4 mpi4py matplotlib xarray scipy
          #if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Clone
        uses: actions/checkout@v2
        with:
           path: getm
           submodules: recursive
           ssh-key: ${{ secrets.BB_TESTING_SSH }}
      - name: Make install
        run: |
          mkdir build
          cd build
          cmake ../getm/python -DCMAKE_Fortran_COMPILER=gfortran-${{ matrix.version }}
          make install
      - name: Run all test cases
        run: |
          cd getm/python/tests
          python test_2d_transport.py
          python test_2d_flow_symmetry.py
          python test_parallel_advection.py --nrow 1 --ncol 1 --noplot -n 1 -o par_adv_1x1.nc
          mpiexec -n 2 python test_parallel_advection.py --nrow 2 --ncol 1 --noplot -n 1 -o par_adv_2x1.nc
          mpiexec -n 2 python test_parallel_advection.py --nrow 1 --ncol 2 --noplot -n 1 -o par_adv_1x2.nc
          cmp par_adv_1x1.nc par_adv_2x1.nc
          cmp par_adv_1x1.nc par_adv_1x2.nc
